start <-  "CORDEX-"
domain <-  domain
GCM= c("_MOHC-HadGEM2-ES_", "_MPI-M-MPI-ESM-MR_", "_NCC-NorESM1-M_")
forcing= c("historical", "rcp26", "rcp85")
RCM= c("_r1i1p1_ICTP-RegCM4-7_v0" )
files= purrr::map(forcing, ~ paste0(GCM, .x)) %>%
purrr::map(., ~ paste0(start, domain, .x, RCM))
} else {
stop(" either specify a valid path or CORDEX-CORE for remote upload")
}
if (!is.null(path.to.obs)) {
obs.file <- ifelse(path.to.obs=="W5E5", "W5E5", list.files(path.to.obs, full.names = TRUE) )
}
# geolocalization ####
options(warn=-1)
if (!is.null(country) & !is.null(xlim)) {
stop("Either select a country or a region of interest, not both")
} else {
country_shp = if (!is.null(country))
raster::getData("GADM", country = country, level = 1)
else
as(extent(min(xlim), max(xlim), min(ylim), max(ylim)), "SpatialPolygons")
raster::crs(country_shp) = sp::CRS("+init=epsg:4326")
xlim <-
c(round(country_shp@bbox[1, 1] - buffer),
round(country_shp@bbox[1, 2] + buffer))  # longitude boundaries for the region of seasonerest
ylim <-
c(round(country_shp@bbox[2, 1] - buffer),
# latitude boundaries for the region of seasonerest
round(country_shp@bbox[2, 2] + buffer))
}
range.x <- max(xlim) - min(xlim)
range.y <-  max(ylim) - min(ylim)
options(warn=1)
# number of cores ####
future::plan(multisession, workers = n.cores)
# making the dataset ####
if (path.to.data=="CORDEX-CORE") message(Sys.time(), " Retrieving CORDEX-CORE data, RCM RegCM4. This may take a while... ") else message(Sys.time())
models.df = tibble(path= files, forcing=forcing) %>%
dplyr::mutate(
models = purrr::map(path,  ~ furrr::future_map(.x, function(x)  {
if (str_detect(x, "historical")) {
message(Sys.time(), " Loading ", x)
data <- suppressMessages(loadGridData(
dataset = x,
var = variable,
years = years.hist,
lonLim = xlim,
latLim = ylim,
season = 1:12
))
message(Sys.time(), " Done")
return(data)
} else {
message(Sys.time(), " Loading ", x)
data <- suppressMessages(loadGridData(
dataset = x,
var = variable,
years = years.proj,
lonLim = xlim,
latLim = ylim,
season = 1:12
))
message(Sys.time(), " Done")
return(data)
}
})))
message(paste("\n", Sys.time(), "Aggregating members \n"))
models.df2 <- models.df %>%
dplyr::mutate(models_mbrs = lapply(models, function(x)
common_dates(x))) %>%
{if (!is.null(path.to.obs)) {
dplyr::mutate(., obs = list(suppressMessages(
loadGridData(
obs.file,
var = variable,
years = years.hist,
lonLim = xlim,
latLim = ylim,
season = 1:12
)
)))
} else {.}} %>%
dplyr::select(-models, -path)
models <- models.df %>%
dplyr::select(path)
message(paste(Sys.time(), "Done"))
rm(models.df)
gc()
return(list(models.df2, country_shp, as.character(models), "C4R.dataframe"))
}
tic()
remote.data <- load_data(country = "Sudan", variable="tasmax", years.hist=1990:2000, years.proj=2050:2060,
path.to.data = "/home/riccardo/Databases/CORDEX-CORE/AFR-22/", path.to.obs="/home/riccardo/Databases/W5E5/", n.cores = 6)
library(cavaR)
library(tictoc)
load_data <- function(
path.to.data,
country,
variable,
xlim=NULL,
ylim=NULL,
years.proj,
years.hist=NULL,
path.to.obs=NULL,
n.cores=3,
buffer=0,
domain=NULL) {
# stop and warnings ####
if(path.to.data!="CORDEX-CORE" & stringr::str_detect(path.to.data, "/")) {
if (!any(stringr::str_detect(list.files(path.to.data), "historical")) & is.null(years.hist)) {
warning("Historical simulation rounds not found. If present, the folder needs to be named historical")
} else if (!any(stringr::str_detect(list.files(path.to.data), "historical")) & !is.null(years.hist)) {
stop("Historical simulation rounds not found. The folder needs to be named historical")
} else {
message("\n Your directory contains the following folders: \n", paste(list.dirs(path.to.data)[-1], "\n"), "all files within the listed folders will be uploaded \n")
files <- list.dirs(path.to.data, full.names = TRUE)[-1] %>%
map(., ~ list.files(.x, full.names = TRUE))
forcing =list.dirs(path.to.data, full.names = F)[-1]
}
} else if (path.to.data=="CORDEX-CORE") {
start <-  "CORDEX-"
domain <-  domain
GCM= c("_MOHC-HadGEM2-ES_", "_MPI-M-MPI-ESM-MR_", "_NCC-NorESM1-M_")
forcing= c("historical", "rcp26", "rcp85")
RCM= c("_r1i1p1_ICTP-RegCM4-7_v0" )
files= purrr::map(forcing, ~ paste0(GCM, .x)) %>%
purrr::map(., ~ paste0(start, domain, .x, RCM))
} else {
stop(" either specify a valid path or CORDEX-CORE for remote upload")
}
if (!is.null(path.to.obs)) {
obs.file <- ifelse(path.to.obs=="W5E5", "W5E5", list.files(path.to.obs, full.names = TRUE) )
}
# geolocalization ####
options(warn=-1)
if (!is.null(country) & !is.null(xlim)) {
stop("Either select a country or a region of interest, not both")
} else {
country_shp = if (!is.null(country))
raster::getData("GADM", country = country, level = 1)
else
as(extent(min(xlim), max(xlim), min(ylim), max(ylim)), "SpatialPolygons")
raster::crs(country_shp) = sp::CRS("+init=epsg:4326")
xlim <-
c(round(country_shp@bbox[1, 1] - buffer),
round(country_shp@bbox[1, 2] + buffer))  # longitude boundaries for the region of seasonerest
ylim <-
c(round(country_shp@bbox[2, 1] - buffer),
# latitude boundaries for the region of seasonerest
round(country_shp@bbox[2, 2] + buffer))
}
range.x <- max(xlim) - min(xlim)
range.y <-  max(ylim) - min(ylim)
options(warn=1)
# number of cores ####
future::plan(multisession, workers = n.cores)
# making the dataset ####
if (path.to.data=="CORDEX-CORE") message(Sys.time(), " Retrieving CORDEX-CORE data, RCM RegCM4. This may take a while... ") else message(Sys.time())
models.df = tibble(path= files, forcing=forcing) %>%
dplyr::mutate(
models = purrr::map(path,  ~ furrr::future_map(.x, function(x)  {
if (str_detect(x, "historical")) {
message(Sys.time(), " Loading ", x)
data <- suppressMessages(loadGridData(
dataset = x,
var = variable,
years = years.hist,
lonLim = xlim,
latLim = ylim,
season = 1:12
))
message(Sys.time(), " Done")
return(data)
} else {
message(Sys.time(), " Loading ", x)
data <- suppressMessages(loadGridData(
dataset = x,
var = variable,
years = years.proj,
lonLim = xlim,
latLim = ylim,
season = 1:12
))
message(Sys.time(), " Done")
return(data)
}
})))
message(paste("\n", Sys.time(), "Aggregating members \n"))
models.df2 <- models.df %>%
dplyr::mutate(models_mbrs = lapply(models, function(x)
common_dates(x))) %>%
{if (!is.null(path.to.obs)) {
dplyr::mutate(., obs = list(suppressMessages(
loadGridData(
obs.file,
var = variable,
years = years.hist,
lonLim = xlim,
latLim = ylim,
season = 1:12
)
)))
} else {.}} %>%
dplyr::select(-models, -path)
models <- models.df %>%
dplyr::select(path)
message(paste(Sys.time(), "Done"))
rm(models.df)
gc()
return(list(models.df2, country_shp, as.character(models), "C4R.dataframe"))
}
tic()
remote.data <- load_data(country = "Sudan", variable="tasmax", years.hist=1990:2000, years.proj=2050:2060,
path.to.data = "/home/riccardo/Databases/CORDEX-CORE/AFR-22/", path.to.obs="/home/riccardo/Databases/W5E5/", n.cores = 6)
library(magrittr)
load_data <- function(
path.to.data,
country,
variable,
xlim=NULL,
ylim=NULL,
years.proj,
years.hist=NULL,
path.to.obs=NULL,
n.cores=3,
buffer=0,
domain=NULL) {
# stop and warnings ####
if(path.to.data!="CORDEX-CORE" & stringr::str_detect(path.to.data, "/")) {
if (!any(stringr::str_detect(list.files(path.to.data), "historical")) & is.null(years.hist)) {
warning("Historical simulation rounds not found. If present, the folder needs to be named historical")
} else if (!any(stringr::str_detect(list.files(path.to.data), "historical")) & !is.null(years.hist)) {
stop("Historical simulation rounds not found. The folder needs to be named historical")
} else {
message("\n Your directory contains the following folders: \n", paste(list.dirs(path.to.data)[-1], "\n"), "all files within the listed folders will be uploaded \n")
files <- list.dirs(path.to.data, full.names = TRUE)[-1] %>%
map(., ~ list.files(.x, full.names = TRUE))
forcing =list.dirs(path.to.data, full.names = F)[-1]
}
} else if (path.to.data=="CORDEX-CORE") {
start <-  "CORDEX-"
domain <-  domain
GCM= c("_MOHC-HadGEM2-ES_", "_MPI-M-MPI-ESM-MR_", "_NCC-NorESM1-M_")
forcing= c("historical", "rcp26", "rcp85")
RCM= c("_r1i1p1_ICTP-RegCM4-7_v0" )
files= purrr::map(forcing, ~ paste0(GCM, .x)) %>%
purrr::map(., ~ paste0(start, domain, .x, RCM))
} else {
stop(" either specify a valid path or CORDEX-CORE for remote upload")
}
if (!is.null(path.to.obs)) {
obs.file <- ifelse(path.to.obs=="W5E5", "W5E5", list.files(path.to.obs, full.names = TRUE) )
}
# geolocalization ####
options(warn=-1)
if (!is.null(country) & !is.null(xlim)) {
stop("Either select a country or a region of interest, not both")
} else {
country_shp = if (!is.null(country))
raster::getData("GADM", country = country, level = 1)
else
as(extent(min(xlim), max(xlim), min(ylim), max(ylim)), "SpatialPolygons")
raster::crs(country_shp) = sp::CRS("+init=epsg:4326")
xlim <-
c(round(country_shp@bbox[1, 1] - buffer),
round(country_shp@bbox[1, 2] + buffer))  # longitude boundaries for the region of seasonerest
ylim <-
c(round(country_shp@bbox[2, 1] - buffer),
# latitude boundaries for the region of seasonerest
round(country_shp@bbox[2, 2] + buffer))
}
range.x <- max(xlim) - min(xlim)
range.y <-  max(ylim) - min(ylim)
options(warn=1)
# number of cores ####
future::plan(multisession, workers = n.cores)
# making the dataset ####
if (path.to.data=="CORDEX-CORE") message(Sys.time(), " Retrieving CORDEX-CORE data, RCM RegCM4. This may take a while... ") else message(Sys.time())
models.df = tibble(path= files, forcing=forcing) %>%
dplyr::mutate(
models = purrr::map(path,  ~ furrr::future_map(.x, function(x)  {
if (str_detect(x, "historical")) {
message(Sys.time(), " Loading ", x)
data <- suppressMessages(loadGridData(
dataset = x,
var = variable,
years = years.hist,
lonLim = xlim,
latLim = ylim,
season = 1:12
))
message(Sys.time(), " Done")
return(data)
} else {
message(Sys.time(), " Loading ", x)
data <- suppressMessages(loadGridData(
dataset = x,
var = variable,
years = years.proj,
lonLim = xlim,
latLim = ylim,
season = 1:12
))
message(Sys.time(), " Done")
return(data)
}
})))
message(paste("\n", Sys.time(), "Aggregating members \n"))
models.df2 <- models.df %>%
dplyr::mutate(models_mbrs = lapply(models, function(x)
common_dates(x))) %>%
{if (!is.null(path.to.obs)) {
dplyr::mutate(., obs = list(suppressMessages(
loadGridData(
obs.file,
var = variable,
years = years.hist,
lonLim = xlim,
latLim = ylim,
season = 1:12
)
)))
} else {.}} %>%
dplyr::select(-models, -path)
models <- models.df %>%
dplyr::select(path)
message(paste(Sys.time(), "Done"))
rm(models.df)
gc()
return(list(models.df2, country_shp, as.character(models), "C4R.dataframe"))
}
tic()
remote.data <- load_data(country = "Sudan", variable="tasmax", years.hist=1990:2000, years.proj=2050:2060,
path.to.data = "/home/riccardo/Databases/CORDEX-CORE/AFR-22/", path.to.obs="/home/riccardo/Databases/W5E5/", n.cores = 6)
library(cavaR)
library(cavaR)
library(tictoc)
tic()
remote.data <- load_data(country = "Sudan", variable="tasmax", years.hist=1990:2000, years.proj=2050:2060,
path.to.data = "/home/riccardo/Databases/CORDEX-CORE/AFR-22/", path.to.obs="/home/riccardo/Databases/W5E5/", n.cores = 6)
toc()
tic()
remote.data <- load_data(country = "Sudan", variable="tasmax", years.hist=1990:2000, years.proj=2050:2060,
path.to.data = "/home/riccardo/Databases/CORDEX-CORE/AFR-22/", path.to.obs="/home/riccardo/Databases/W5E5/", n.cores = 3)
toc()
library(cavaR)
library(tictoc)
library(cavaR)
# parallel on first loop 3 cores. 15 sec
tic()
remote.data <- load_data(country = "Sudan", variable="tasmax", years.hist=1990:2000, years.proj=2050:2060,
path.to.data = "/home/riccardo/Databases/CORDEX-CORE/AFR-22/", path.to.obs="/home/riccardo/Databases/W5E5/", n.cores = 3)
toc()
# parallel on first loop 1 cores. 15 sec
tic()
remote.data <- load_data(country = "Sudan", variable="tasmax", years.hist=1990:2000, years.proj=2050:2060,
path.to.data = "/home/riccardo/Databases/CORDEX-CORE/AFR-22/", path.to.obs="/home/riccardo/Databases/W5E5/", n.cores = 1)
toc()
library(cavaR)
library(tictoc)
library(cavaR)
tic()
remote.data <- load_data(country = "Sudan", variable="tasmax", years.hist=1990:2000, years.proj=2050:2060,
path.to.data = "/home/riccardo/Databases/CORDEX-CORE/AFR-22/", path.to.obs="/home/riccardo/Databases/W5E5/", n.cores = 1)
toc()
library(cavaR)
library(tictoc)
library(cavaR)
tic()
remote.data <- load_data(country = "Sudan", variable="tasmax", years.hist=1990:2000, years.proj=2050:2060,
path.to.data = "/home/riccardo/Databases/CORDEX-CORE/AFR-22/", path.to.obs="/home/riccardo/Databases/W5E5/", n.cores = 1)
toc()
library(cavaR)
tic()
remote.data <- load_data(country = "Sudan", variable="tasmax", years.hist=1990:2000, years.proj=2050:2060,
path.to.data = "/home/riccardo/Databases/CORDEX-CORE/AFR-22/", path.to.obs="/home/riccardo/Databases/W5E5/", n.cores = 1)
toc()
library(cavaR)
library(tictoc)
library(cavaR)
tic()
remote.data <- load_data(country = "Sudan", variable="tasmax", years.hist=1990:2000, years.proj=2050:2060,
path.to.data = "/home/riccardo/Databases/CORDEX-CORE/AFR-22/", path.to.obs="/home/riccardo/Databases/W5E5/", n.cores = 6)
toc()
library(cavaR)
library(cavaR)
library(cavaR)
library(tictoc)
tic()
remote.data <- load_data(country = "Sudan", variable="tasmax", years.hist=1990:2000, years.proj=2050:2060,
path.to.data = "/home/riccardo/Databases/CORDEX-CORE/AFR-22/", path.to.obs="/home/riccardo/Databases/W5E5/")
toc()
library(cavaR)
library(tittoc)
library(titoc)
library(tictoc)
tic()
remote.data <- load_data(country = "Sudan", variable="tasmax", years.hist=1995, years.proj=2050:2052,
path.to.data = "CORDEX-CORE", path.to.obs="W5E5", domain="AFR-22")
toc()
library(cavaR)
library(tictoc)
library(cavaR)
tic()
remote.data <- load_data(country = "Sudan", variable="tasmax", years.hist=1995, years.proj=2050:2052,
path.to.data = "CORDEX-CORE", path.to.obs="W5E5", domain="AFR-22")
toc()
library(cavaR)
library(cavaR)
library(tictoc)
tic()
remote.data <- load_data(country = "Sudan", variable="tasmax", years.hist=1995, years.proj=2050:2052,
path.to.data = "CORDEX-CORE", path.to.obs="W5E5", domain="AFR-22")
toc()
library(cavaR)
library(cavaR)
library(tictoc)
tic()
remote.data <- load_data(country = "Sudan", variable="tasmax", years.hist=1995, years.proj=2050:2052,
path.to.data = "CORDEX-CORE", path.to.obs="W5E5", domain="AFR-22")
toc()
library(cavaR)
library(cavaR)
tasmax.data <- load_data(variable="tasmax", years.hist=1980:2005, years.proj=2010:2099,xlim = c(-27,-20), ylim =  c(12,20),
path.to.data = "~/Databases/CORDEX-CORE/AFR-22", path.to.obs="~/Databases/W5E5")
tasmax.data <- load_data(country=NULL, variable="tasmax", years.hist=1980:2005, years.proj=2010:2099,xlim = c(-27,-20), ylim =  c(12,20),
path.to.data = "~/Databases/CORDEX-CORE/AFR-22", path.to.obs="~/Databases/W5E5")
hurs.data <- load_data(variable="hurs", years.hist=1980:2005, years.proj=2010:2099,xlim = c(-27,-20), ylim =  c(12,20),
path.to.data = "~/Databases/CORDEX-CORE/AFR-22", path.to.obs="~/Databases/W5E5")
hurs.data <- load_data(country=NULL, variable="hurs", years.hist=1980:2005, years.proj=2010:2099,xlim = c(-27,-20), ylim =  c(12,20),
path.to.data = "~/Databases/CORDEX-CORE/AFR-22", path.to.obs="~/Databases/W5E5")
tasmax.data <- load_data(country=NULL, variable="tas", years.hist=1980:2005, years.proj=2010:2099,xlim = c(-27,-20), ylim =  c(12,20),
path.to.data = "~/Databases/CORDEX-CORE/AFR-22", path.to.obs="~/Databases/W5E5")
tasmax.data <- load_data(country=NULL, variable="tasmax", years.hist=1980:2005, years.proj=2010:2099,xlim = c(-27,-20), ylim =  c(12,20),
path.to.data = "~/Databases/CORDEX-CORE/AFR-22", path.to.obs="~/Databases/W5E5")
rcp2.6 <- tasmax.data[[1]]$models_mbrs[[1]]$Data
dim(rcp2.6)
rcp2.6 <- tasmax.data[[1]]$models_mbrs[[1]]$Data %>%
apply(., c(2,3,4), mean)
library(tidyverse)
rcp2.6 <- tasmax.data[[1]]$models_mbrs[[1]]$Data %>%
apply(., c(2,3,4), mean)
dim(rcp2.6)
tas_rcp2.6 <- tasmax.data[[1]]$models_mbrs[[1]]$Data %>%
apply(., c(2,3,4), mean)
dim(tas_rcp2.6)
hurs_rcp2.6 <- hurs.data[[1]]$models_mbrs[[1]]$Data %>%
apply(., c(2,3,4), mean)
dim(tas_rcp2.6)
library(transformeR)
tasmax.data <- load_data(country=NULL, variable="tasmax", years.hist=1980:2005, years.proj=2010:2099,xlim = c(-27,-20), ylim =  c(12,20),
path.to.data = "~/Databases/CORDEX-CORE/AFR-22", path.to.obs="~/Databases/W5E5") %>%
tasmax.data2 <- tasmax.data[[1]] %>%
mutate(models_mbrs=map(models_mbrs, ~ gridArithmetics(.x, 273.15, "-")))
tasmax.data <- load_data(country=NULL, variable="tasmax", years.hist=1980:2005, years.proj=2010:2099,xlim = c(-27,-20), ylim =  c(12,20),
path.to.data = "~/Databases/CORDEX-CORE/AFR-22", path.to.obs="~/Databases/W5E5") %>%
tasmax.data2 <- tasmax.data %>%
mutate(models_mbrs=map(models_mbrs, ~ gridArithmetics(.x, 273.15, "-")))
tasmax.data <- load_data(country=NULL, variable="tasmax", years.hist=1980:2005, years.proj=2010:2099,xlim = c(-27,-20), ylim =  c(12,20),
path.to.data = "~/Databases/CORDEX-CORE/AFR-22", path.to.obs="~/Databases/W5E5") %>%
tasmax.data2 <- tasmax.data[[1]] %>%
mutate(models_mbrs2=map(models_mbrs, ~ gridArithmetics(.x, 273.15, "-")))
prova <- gridArithmetics(tasmax.data[[1]]$models_mbrs[[1]], 273, "-")
tasmax.data <- load_data(country=NULL, variable="tasmax", years.hist=1980:2005, years.proj=2010:2099,xlim = c(-27,-20), ylim =  c(12,20),
path.to.data = "~/Databases/CORDEX-CORE/AFR-22", path.to.obs="~/Databases/W5E5") %>%
tasmax.data2 <- tasmax.data[[1]] %>%
mutate(models_mbrs2=map(models_mbrs, ~ gridArithmetics(.x, 273.15, "-")))
tasmax.data <- load_data(country=NULL, variable="tasmax", years.hist=1980:2005, years.proj=2010:2099,xlim = c(-27,-20), ylim =  c(12,20),
path.to.data = "~/Databases/CORDEX-CORE/AFR-22", path.to.obs="~/Databases/W5E5")
tasmax.data %>%
projections(bias.correction = F)
tasmax.data %>%
projections(bias.correction = F, season = 1:12) %>%
plotting(palette = c("red", "black"))
tasmax.data %>%
projections(bias.correction = F, season = 1:12) %>%
plotting(palette = c("red", "black"), plot_titles = "prova")
?gridArithmetics
prova <- gridArithmetics(tasmax.data[[1]]$models_mbrs[[1]], 273, "-")
tasmax.data <- load_data(country=NULL, variable="tasmax", years.hist=1980:2005, years.proj=2010:2099,xlim = c(-26,-20), ylim =  c(12,20),
path.to.data = "~/Databases/CORDEX-CORE/AFR-22", path.to.obs="~/Databases/W5E5")
prova <- gridArithmetics(tasmax.data[[1]]$models_mbrs[[1]], 273, "-")
tasmax.data <- load_data(country=NULL, variable="tasmax", years.hist=1980:2005, years.proj=2010:2099,xlim = c(-24,-20), ylim =  c(12,20),
path.to.data = "~/Databases/CORDEX-CORE/AFR-22", path.to.obs="~/Databases/W5E5")
prova <- gridArithmetics(tasmax.data[[1]]$models_mbrs[[1]], 273, operator = "-")
tasmax.data <- load_data(country=NULL, variable="tasmax", years.hist=1980:2005, years.proj=2010:2099,xlim = c(-27,-20), ylim =  c(12,20),
path.to.data = "~/Databases/CORDEX-CORE/AFR-22", path.to.obs="~/Databases/W5E5")
prova <- gridArithmetics(tasmax.data[[1]]$models_mbrs[[1]], 273, operator = "-")
tasmax.data2 <- tasmax.data[[1]] %>%
mutate(models_mbrs2=map(models_mbrs, ~ gridArithmetics(.x, 273.15, operator="-")))
hurs.data <- load_data(country=NULL, variable="hurs", years.hist=1980:2005, years.proj=2010:2099,xlim = c(-27,-20), ylim =  c(12,20),
path.to.data = "~/Databases/CORDEX-CORE/AFR-22", path.to.obs="~/Databases/W5E5")
out <- map2(tasmax.data2$models_mbrs, hurs.data[[1]]$models_mbrs, function(x, y) {
int1 <- gridArithmetics(x, 0.8, operator = "*")
int2 <- gridArithmetics(y, 500, operator = "/")
final <-  gridArithmetics(int1,int2, operator = "+")
})
range(out[[1]]$Data)
range(out[[1]]$Data, na.rm = T)
range(tasmax.data2$models_mbrs[[1]]$Data, na.rm = T)
tasmax.data <- load_data(country=NULL, variable="tasmax", years.hist=1980:2005, years.proj=2010:2099,xlim = c(-27,-20), ylim =  c(12,20),
path.to.data = "~/Databases/CORDEX-CORE/AFR-22", path.to.obs="~/Databases/W5E5")
tasmax.data2 <- tasmax.data[[1]] %>%
mutate(models_mbrs=map(models_mbrs, ~ gridArithmetics(.x, 273.15, operator="-")))
range(tasmax.data2$models_mbrs[[1]]$Data, na.rm = T)
out <- map2(tasmax.data2$models_mbrs, hurs.data[[1]]$models_mbrs, function(x, y) {
int1 <- gridArithmetics(x, 0.8, operator = "*")
int2 <- gridArithmetics(y, 500, operator = "/")
final <-  gridArithmetics(int1,int2, operator = "+")
})
range(out[[1]]$Data, na.rm = T)
