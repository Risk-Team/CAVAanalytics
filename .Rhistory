prob_proj <- density(prob_2.6_far)
(old <- integrate(approxfun(prob_hist), lower = 29, upper = 30))
(recent <- integrate(approxfun(prob_proj), lower = 29, upper = 30))
prob_proj <- density(prob_8.5_far)
(old <- integrate(approxfun(prob_hist), lower = 29, upper = 30))
(recent <- integrate(approxfun(prob_proj), lower = 29, upper = 30))
prob_proj <- density(prob_8.5_mid)
(old <- integrate(approxfun(prob_hist), lower = 29, upper = 30))
(recent <- integrate(approxfun(prob_proj), lower = 29, upper = 30))
quantile(out, 0.01, na.rm=T)
(old <- integrate(approxfun(prob_hist), lower = 16, upper = 18))
(recent <- integrate(approxfun(prob_proj), lower = 16, upper = 18))
prob_proj <- density(prob_8.5_far)
(old <- integrate(approxfun(prob_hist), lower = 16, upper = 18))
(recent <- integrate(approxfun(prob_proj), lower = 16, upper = 18))
prob_proj <- density(prob_2.6_far)
(old <- integrate(approxfun(prob_hist), lower = 16, upper = 18))
(recent <- integrate(approxfun(prob_proj), lower = 16, upper = 18))
prob_proj <- density(prob_2.6_mid)
(old <- integrate(approxfun(prob_hist), lower = 16, upper = 18))
(recent <- integrate(approxfun(prob_proj), lower = 16, upper = 18))
data_SST_proj <- o2_total %>%
filter(RCP!="historical") %>%
mutate(models_tmp = map(models_mbrs, function(x)  {
# divide the data in 30 years time frame for projections
yrs <- list(2020:2049, 2050:2079)
map(yrs, ~ subsetGrid(x, years = .x))
}))
data_SST_hist <-o2_total %>%
filter(RCP=="historical")
out <- c(data_SST_proj$models_mbrs[[1]][[1]]$Data, data_SST_hist$models_mbrs[[1]]$Data)
quantile(out, 0.01, na.rm=T)
hist <- data_SST_hist$models_mbrs[[1]]$Data[!is.na(data_SST_hist$models_mbrs[[1]]$Data)]
prob_2.6_mid <- data_SST_proj$models_tmp[[1]][[1]]$Data[!is.na(data_SST_proj$models_tmp[[1]][[1]]$Data)]
prob_2.6_far <- data_SST_proj$models_tmp[[1]][[2]]$Data[!is.na(data_SST_proj$models_tmp[[1]][[2]]$Data)]
prob_8.5_mid <- data_SST_proj$models_tmp[[2]][[1]]$Data[!is.na(data_SST_proj$models_tmp[[2]][[1]]$Data)]
prob_8.5_far <- data_SST_proj$models_tmp[[2]][[2]]$Data[!is.na(data_SST_proj$models_tmp[[2]][[2]]$Data)]
prob_hist <- density(hist)
prob_proj <- density(prob_2.6_mid)
prob_hist <- density(hist)
prob_proj <- density(prob_2.6_mid)
(old <- integrate(approxfun(prob_hist), lower = 0.1, upper = 0.2))
(old <- integrate(approxfun(prob_hist), lower = 0.15, upper = 0.2))
(recent <- integrate(approxfun(prob_proj), lower = 0.15, upper = 0.2))
(old <- integrate(approxfun(prob_hist), lower = 0.17, upper = 0.2))
(recent <- integrate(approxfun(prob_proj), lower = 0.17, upper = 0.2))
(old <- integrate(approxfun(prob_hist), lower = 0.19, upper = 0.2))
(recent <- integrate(approxfun(prob_proj), lower = 0.19, upper = 0.2))
prob_proj <- density(prob_2.6_far)
(old <- integrate(approxfun(prob_hist), lower = 0.19, upper = 0.2))
(recent <- integrate(approxfun(prob_proj), lower = 0.19, upper = 0.2))
prob_proj <- density(prob_8.5_mid)
(old <- integrate(approxfun(prob_hist), lower = 0.19, upper = 0.2))
(recent <- integrate(approxfun(prob_proj), lower = 0.19, upper = 0.2))
prob_proj <- density(prob_8.5_far)
(old <- integrate(approxfun(prob_hist), lower = 0.19, upper = 0.2))
(recent <- integrate(approxfun(prob_proj), lower = 0.19, upper = 0.2))
(recent <- integrate(approxfun(prob_proj), lower = 0.15, upper = 0.2))
(recent <- integrate(approxfun(prob_proj), lower = 0.19, upper = 0.2))
quantile(out, 0.99, na.rm=T)
hist <- data_SST_hist$models_mbrs[[1]]$Data[!is.na(data_SST_hist$models_mbrs[[1]]$Data)]
prob_2.6_mid <- data_SST_proj$models_tmp[[1]][[1]]$Data[!is.na(data_SST_proj$models_tmp[[1]][[1]]$Data)]
prob_2.6_far <- data_SST_proj$models_tmp[[1]][[2]]$Data[!is.na(data_SST_proj$models_tmp[[1]][[2]]$Data)]
prob_8.5_mid <- data_SST_proj$models_tmp[[2]][[1]]$Data[!is.na(data_SST_proj$models_tmp[[2]][[1]]$Data)]
prob_8.5_far <- data_SST_proj$models_tmp[[2]][[2]]$Data[!is.na(data_SST_proj$models_tmp[[2]][[2]]$Data)]
prob_hist <- density(hist)
prob_proj <- density(prob_8.5_far)
(old <- integrate(approxfun(prob_hist), lower = 0.24, upper = 0.3))
(old <- integrate(approxfun(prob_hist), lower = 0.24, upper = 0.28))
(old <- integrate(approxfun(prob_hist), lower = 0.24, upper = 0.25))
(old <- integrate(approxfun(prob_hist), lower = 0.24, upper = 0.25))
(recent <- integrate(approxfun(prob_proj), lower = 0.24, upper = 0.25))
prob_proj <- density(prob_8.5_mid)
(old <- integrate(approxfun(prob_hist), lower = 0.24, upper = 0.25))
(recent <- integrate(approxfun(prob_proj), lower = 0.24, upper = 0.25))
prob_proj <- density(prob_2.6_mid)
(old <- integrate(approxfun(prob_hist), lower = 0.24, upper = 0.25))
(recent <- integrate(approxfun(prob_proj), lower = 0.24, upper = 0.25))
prob_proj <- density(prob_2.6_far)
(old <- integrate(approxfun(prob_hist), lower = 0.24, upper = 0.25))
(recent <- integrate(approxfun(prob_proj), lower = 0.24, upper = 0.25))
data_SST_proj <- so_total %>%
filter(RCP!="historical") %>%
mutate(models_tmp = map(models_mbrs, function(x)  {
# divide the data in 30 years time frame for projections
yrs <- list(2020:2049, 2050:2079)
map(yrs, ~ subsetGrid(x, years = .x))
}))
data_SST_hist <-so_total %>%
filter(RCP=="historical")
out <- c(data_SST_proj$models_mbrs[[1]][[1]]$Data, data_SST_hist$models_mbrs[[1]]$Data)
quantile(out, 0.99, na.rm=T)
hist <- data_SST_hist$models_mbrs[[1]]$Data[!is.na(data_SST_hist$models_mbrs[[1]]$Data)]
prob_2.6_mid <- data_SST_proj$models_tmp[[1]][[1]]$Data[!is.na(data_SST_proj$models_tmp[[1]][[1]]$Data)]
prob_2.6_far <- data_SST_proj$models_tmp[[1]][[2]]$Data[!is.na(data_SST_proj$models_tmp[[1]][[2]]$Data)]
prob_8.5_mid <- data_SST_proj$models_tmp[[2]][[1]]$Data[!is.na(data_SST_proj$models_tmp[[2]][[1]]$Data)]
prob_8.5_far <- data_SST_proj$models_tmp[[2]][[2]]$Data[!is.na(data_SST_proj$models_tmp[[2]][[2]]$Data)]
prob_hist <- density(hist)
prob_proj <- density(prob_2.6_far)
(old <- integrate(approxfun(prob_hist), lower = 36.9, upper = 38))
(recent <- integrate(approxfun(prob_proj), lower = 36.9, upper = 38))
prob_proj <- density(prob_2.6_mid)
(old <- integrate(approxfun(prob_hist), lower = 36.9, upper = 38))
(recent <- integrate(approxfun(prob_proj), lower = 36.9, upper = 38))
prob_proj <- density(prob_8.5_mid)
(old <- integrate(approxfun(prob_hist), lower = 36.9, upper = 38))
(recent <- integrate(approxfun(prob_proj), lower = 36.9, upper = 38))
prob_proj <- density(prob_8.5_far)
(old <- integrate(approxfun(prob_hist), lower = 36.9, upper = 38))
(recent <- integrate(approxfun(prob_proj), lower = 36.9, upper = 38))
quantile(out, 0.01, na.rm=T)
hist <- data_SST_hist$models_mbrs[[1]]$Data[!is.na(data_SST_hist$models_mbrs[[1]]$Data)]
prob_2.6_mid <- data_SST_proj$models_tmp[[1]][[1]]$Data[!is.na(data_SST_proj$models_tmp[[1]][[1]]$Data)]
prob_2.6_far <- data_SST_proj$models_tmp[[1]][[2]]$Data[!is.na(data_SST_proj$models_tmp[[1]][[2]]$Data)]
prob_8.5_mid <- data_SST_proj$models_tmp[[2]][[1]]$Data[!is.na(data_SST_proj$models_tmp[[2]][[1]]$Data)]
prob_8.5_far <- data_SST_proj$models_tmp[[2]][[2]]$Data[!is.na(data_SST_proj$models_tmp[[2]][[2]]$Data)]
prob_hist <- density(hist)
prob_proj <- density(prob_8.5_far)
(old <- integrate(approxfun(prob_hist), lower = 36.9, upper = 38))
(recent <- integrate(approxfun(prob_proj), lower = 36.9, upper = 38))
quantile(out, 0.01, na.rm=T)
(old <- integrate(approxfun(prob_hist), lower = 33, upper = 34))
(recent <- integrate(approxfun(prob_proj), lower = 33, upper = 34))
prob_proj <- density(prob_8.5_mid)
(old <- integrate(approxfun(prob_hist), lower = 33, upper = 34))
(recent <- integrate(approxfun(prob_proj), lower = 33, upper = 34))
prob_proj <- density(prob_2.6_mid)
(old <- integrate(approxfun(prob_hist), lower = 33, upper = 34))
(recent <- integrate(approxfun(prob_proj), lower = 33, upper = 34))
prob_proj <- density(prob_2.6_far)
(old <- integrate(approxfun(prob_hist), lower = 33, upper = 34))
(recent <- integrate(approxfun(prob_proj), lower = 33, upper = 34))
library(raster)
bath <- raster("../../data/bathymetry/gebco_2022_n21.709_s6.9434_w-32.2559_e-17.1387.nc")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
bath <- raster("../../data/bathymetry/gebco_2022_n21.709_s6.9434_w-32.2559_e-17.1387.nc")
bath2 <- crop(bath, extent(-27, -21, 14.5, 18))
bath2.df <- as.data.frame(bath2, xy=TRUE)
View(bath2.df)
colnames(bath2.df) <- c("x", "y", "elev")
bl <- colorRampPalette(
c("#000033", "#000066", "#000099", "#0000CC", "#0000FF",
"#0033CC", "#3366FF", "#6699FF", "#66CCFF", "#00FFFF", "#99FFFF")
)(1000)
re <- colorRampPalette(
c("#467832", "#887438", "#B19D48", "#DBC758", "#FAE769",
"#FAEB7E", "#FCED93", "#FCF1A7", "#FCF6C1", "#FDFAE0")
)(1000)
bath2.df %>%
ggplot() +
geom_tile(aes(x = x, y = y, fill = elev)) +
geom_contour(aes(x = x, y = y, z = elev), color = "black") +
scale_fill_gradientn(colours=c(bl,"white", re), na.value = "grey98",
limits = c(-2000, 2000))  +
coord_fixed()+
theme(
legend.title = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(
angle = 45,
vjust = 1,
hjust = 1,
size = 8
),
axis.text.y = element_text(size = 8)
)
library(tidyverse)
library(readxl)
library(raster)
bath2.df %>%
ggplot() +
geom_tile(aes(x = x, y = y, fill = elev)) +
geom_contour(aes(x = x, y = y, z = elev), color = "black") +
scale_fill_gradientn(colours=c(bl,"white", re), na.value = "grey98",
limits = c(-2000, 2000))  +
coord_fixed()+
theme(
legend.title = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(
angle = 45,
vjust = 1,
hjust = 1,
size = 8
),
axis.text.y = element_text(size = 8)
)
View(bath2.df)
bath2.df %>%
mutate(col=case_when(elev < 0 ~ "sea",
elev > 0 & elev < 0.7 ~ "sub",
elev > 0.7  ~ "out"))
bath2.df %>%
mutate(col=case_when(elev < 0 ~ 1,
elev > 0 & elev < 0.7 ~ 2,
elev > 0.7  ~ 3)) %>%
ggplot() +
geom_tile(aes(x = x, y = y, fill =col)) +
geom_contour(aes(x = x, y = y, z = elev), color = "black") +
scale_fill_gradientn(colours=c("blue", "red", "brown"))  +
coord_fixed()+
theme(
legend.title = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(
angle = 45,
vjust = 1,
hjust = 1,
size = 8
),
axis.text.y = element_text(size = 8)
)
bath2.df %>%
mutate(col=case_when(elev < 0 ~ "blue",
elev > 0 & elev < 0.7 ~ "red",
elev > 0.7  ~ "brown")) %>%
ggplot() +
geom_tile(aes(x = x, y = y, fill =col)) +
geom_contour(aes(x = x, y = y, z = elev), color = "black") +
scale_fill_discrete()(colours=c("blue", "red", "brown"))  +
coord_fixed()+
theme(
legend.title = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(
angle = 45,
vjust = 1,
hjust = 1,
size = 8
),
axis.text.y = element_text(size = 8)
)
bath2.df %>%
mutate(col=case_when(elev < 0 ~ "blue",
elev > 0 & elev < 0.7 ~ "red",
elev > 0.7  ~ "brown")) %>%
ggplot() +
geom_tile(aes(x = x, y = y, fill =col)) +
geom_contour(aes(x = x, y = y, z = elev), color = "black") +
scale_fill_discrete(colours=c("blue", "red", "brown"))  +
coord_fixed()+
theme(
legend.title = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(
angle = 45,
vjust = 1,
hjust = 1,
size = 8
),
axis.text.y = element_text(size = 8)
)
bath2.df %>%
mutate(col=case_when(elev < 0 ~ "blue",
elev > 0 & elev < 0.7 ~ "red",
elev > 0.7  ~ "brown")) %>%
ggplot() +
geom_tile(aes(x = x, y = y, fill =col)) +
geom_contour(aes(x = x, y = y, z = elev), color = "black") +
scale_fill_discrete()  +
coord_fixed()+
theme(
legend.title = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(
angle = 45,
vjust = 1,
hjust = 1,
size = 8
),
axis.text.y = element_text(size = 8)
)
bath2.df %>%
mutate(col=case_when(elev < 0 ~ "blue",
elev > 0 & elev < 3~ "red",
elev > 0.7  ~ "brown")) %>%
ggplot() +
geom_tile(aes(x = x, y = y, fill =col)) +
geom_contour(aes(x = x, y = y, z = elev), color = "black") +
scale_fill_discrete()  +
coord_fixed()+
theme(
legend.title = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(
angle = 45,
vjust = 1,
hjust = 1,
size = 8
),
axis.text.y = element_text(size = 8)
)
bath2.df %>%
mutate(col=case_when(elev < 0 ~ "blue",
elev > 0 & elev < 3~ "red",
elev > 0.7  ~ "brown")) %>%
ggplot() +
geom_tile(aes(x = x, y = y, fill =col)) +
scale_fill_discrete()  +
coord_fixed()+
theme(
legend.title = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(
angle = 45,
vjust = 1,
hjust = 1,
size = 8
),
axis.text.y = element_text(size = 8)
)
bath2.df %>%
mutate(col=case_when(elev < 0 ~ "blue",
elev > 0 & elev < 3~ "red",
elev > 0.7  ~ "brown")) %>%
ggplot() +
geom_tile(aes(x = x, y = y, fill =col)) +
scale_fill_discrete(c("cyan", "red", "green"))  +
coord_fixed()+
theme(
legend.title = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(
angle = 45,
vjust = 1,
hjust = 1,
size = 8
),
axis.text.y = element_text(size = 8)
)
bath2.df %>%
mutate(col=case_when(elev < 0 ~ "blue",
elev > 0 & elev < 3~ "red",
elev > 0.7  ~ "brown")) %>%
ggplot() +
geom_tile(aes(x = x, y = y, fill =col)) +
scale_fill_discrete(values=c("cyan", "red", "green"))  +
coord_fixed()+
theme(
legend.title = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(
angle = 45,
vjust = 1,
hjust = 1,
size = 8
),
axis.text.y = element_text(size = 8)
)
bath2.df %>%
mutate(col=case_when(elev < 0 ~ "blue",
elev > 0 & elev < 3~ "red",
elev > 0.7  ~ "brown")) %>%
ggplot() +
geom_tile(aes(x = x, y = y, fill =col)) +
scale_fill_manual(values=c("cyan", "red", "green"))  +
coord_fixed()+
theme(
legend.title = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(
angle = 45,
vjust = 1,
hjust = 1,
size = 8
),
axis.text.y = element_text(size = 8)
)
bath2.df %>%
mutate(col=case_when(elev < 0 ~ "blue",
elev > 0 & elev < 3~ "red",
elev > 0.7  ~ "brown")) %>%
ggplot() +
geom_tile(aes(x = x, y = y, fill =col)) +
scale_fill_manual(values=c(NA, "red", "green"))  +
coord_fixed()+
theme(
legend.title = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(
angle = 45,
vjust = 1,
hjust = 1,
size = 8
),
axis.text.y = element_text(size = 8)
)
bath2.df %>%
mutate(col=case_when(elev < 0 ~ "blue",
elev > 0 & elev < 5~ "red",
elev > 0.7  ~ "brown")) %>%
ggplot() +
geom_tile(aes(x = x, y = y, fill =col)) +
scale_fill_manual(values=c(NA, "red", "green"))  +
coord_fixed()+
theme(
legend.title = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(
angle = 45,
vjust = 1,
hjust = 1,
size = 8
),
axis.text.y = element_text(size = 8)
)
bath2.df %>%
mutate(col=case_when(elev < 0 ~ "blue",
elev > 0 & elev < 20~ "red",
elev > 0.7  ~ "brown")) %>%
ggplot() +
geom_tile(aes(x = x, y = y, fill =col)) +
scale_fill_manual(values=c(NA, "red", "green"))  +
coord_fixed()+
theme(
legend.title = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(
angle = 45,
vjust = 1,
hjust = 1,
size = 8
),
axis.text.y = element_text(size = 8)
)
bath2.df %>%
ggplot() +
geom_tile(aes(x = x, y = y, fill = elev)) +
geom_contour(aes(x = x, y = y, z = elev), color = "black") +
scale_fill_gradientn(colours=c(bl,"white", re), na.value = "grey98",
limits = c(-2000, 2000))  +
coord_fixed()+
theme(
legend.title = element_blank(),
plot.background = element_blank(),
panel.background = element_rect(fill = 'aliceblue'),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(
angle = 45,
vjust = 1,
hjust = 1,
size = 8
),
axis.text.y = element_text(size = 8)
)
library(cavaR)
usethis::use_pkgdown()
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
usethis::use_pkgdown_github_pages()
library(cavaR)
usethis::use_pkgdown()
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
